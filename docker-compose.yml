version: '3.8'

services:
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    volumes:
      - zookeeperconf:/opt/zookeeper-3.7.0/conf
      - zookeeperdata:/opt/zookeeper-3.7.0/data
    ports:
      - "2181:2181"
    deploy:
      mode: global
    networks:
      kafka-network:

  kafka:
    image: obsidiandynamics/kafka
    hostname: kafka
    restart: "no"
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://kafka:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    deploy:
      mode: global
    depends_on:
      - zookeeper
    networks:
      kafka-network:

  micro-producer:
    build:
      context: ./micro-producer
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "3535:3535"
    networks:
      - kafka-network

  micro-consumer:
    build:
      context: ./micro-consumer
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "3434:3434"
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  zookeeperconf:
  zookeeperdata:
